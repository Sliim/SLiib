<?php
/**
 * This source file is part of SLiib.
 *
 * SLiib is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SLiib is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with SLiib. If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
 *
 * PHP Version 5.3
 *
 * @category   SLiib
 * @package    Tests
 * @subpackage UnitTests
 * @author     Sliim <sliim@mailoo.org>
 * @license    GNU/GPL http://www.gnu.org/licenses/gpl-3.0.html
 * @version    Release: 0.2
 * @link       http://www.sliim-projects.eu
 */

namespace SLiib\WebApp\Security\Exception;
use SLiib\WebApp\Security\Rule;

/**
 * Test class for \SLiib\WebApp\Security\Exception\HackingAttempt.
 * Generated by PHPUnit on 2011-11-22 at 23:12:33.
 *
 * @package    Tests
 * @subpackage UnitTests
 */
class HackingAttemptTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Test object
     * @var \SLiib\WebApp\Security\Exception\HackingAttempt
     */
    protected $_object;

    /**
     * Fake checker name
     * @var \string
     */
    private $_checkerName = 'CheckerNameTest';

    /**
     * Rule for test
     * @var \SLiib\WebApp\Security\Rule
     */
    private $_rule = NULL;

    /**
     * Fake location
     * @var \string
     */
    private $_location = 'LocationTest';

    /**
     * Fake reason
     * @var \string
     */
    private $_reason = 'ReasonTest';


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @covers \SLiib\WebApp\Security\Exception\HackingAttempt::__construct
     *
     * @return \void
     */
    public function setUp()
    {
        $this->_rule   = new Rule(1337, 'RuleTest');
        $this->_object = new HackingAttempt(
            $this->_checkerName,
            $this->_rule,
            $this->_location,
            $this->_reason
        );

    }


    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return \void
     */
    public function tearDown()
    {
        unset($this->_object);

    }


    /**
     * Test get checker name
     *
     * @covers \SLiib\WebApp\Security\Exception\HackingAttempt::getCheckerName
     *
     * @return \void
     */
    public function testGetCheckerName()
    {
        $this->assertEquals($this->_checkerName, $this->_object->getCheckerName());

    }


    /**
     * Test get rule
     *
     * @covers \SLiib\WebApp\Security\Exception\HackingAttempt::getRule
     *
     * @return \void
     */
    public function testGetRule()
    {
        $rule = $this->_object->getRule();
        $this->assertInstanceOf('\SLiib\WebApp\Security\Rule', $rule);
        $this->assertEquals(1337, $rule->getId());
        $this->assertEquals('RuleTest', $rule->getMessage());

    }


    /**
     * Test get location
     *
     * @covers \SLiib\WebApp\Security\Exception\HackingAttempt::getLocation
     *
     * @return \void
     */
    public function testGetLocation()
    {
        $this->assertEquals($this->_location, $this->_object->getLocation());

    }


    /**
     * Test get reason
     *
     * @covers \SLiib\WebApp\Security\Exception\HackingAttempt::getReason
     *
     * @return \void
     */
    public function testGetReason()
    {
        $this->assertEquals($this->_reason, $this->_object->getReason());

    }


}
?>
