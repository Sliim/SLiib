<?php
/**
 * This source file is part of SLiib.
 *
 * SLiib is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SLiib is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with SLiib. If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
 *
 * PHP version 5
 *
 * @category   SLiib
 * @package    SLiib
 * @subpackage UnitTests
 * @author     Sliim <sliim@mailoo.org>
 * @license    GNU/GPL http://www.gnu.org/licenses/gpl-3.0.html
 * @version    Release: 0.2
 * @link       http://www.sliim-projects.eu
 */

/**
 * Test class for SLiib_Security & SLiib_Security_Abstract.
 * Generated by PHPUnit on 2011-10-17 at 23:57:42.
 *
 * @package    SLiib
 * @subpackage UnitTests
 */
class SLiib_SecurityTest extends PHPUnit_Framework_TestCase
{


    /**
     * Test check
     *
     * @covers SLiib_Security::check
     *
     * @return void
     */
    public function testCheck()
    {
        $mock = $this->getMockForAbstractClass('Stubs_Security_Abstract', array('Positive'));
        SLiib_HTTP_Request::init();
        SLiib_Security::check(array($mock));

    }


    /**
     * Test check invalid checkers
     *
     * @covers SLiib_Security::check
     * @covers SLiib_Security_Exception_CheckerError::__construct
     *
     * @return void
     */
    public function testCheckInvalidChecker()
    {
        try {
            SLiib_Security::check(array('w00t'));
        } catch (SLiib_Security_Exception_CheckerError $e) {
            $this->assertInstanceOf('SLiib_Security_Exception_CheckerError', $e);
            return;
        } catch (Exception $e) {
            $this->fail('Bad exception has been raised');
        }

        $this->fail('No exception has been raised');

    }


}

