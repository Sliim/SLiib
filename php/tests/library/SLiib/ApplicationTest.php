<?php
/**
 * This source file is part of SLiib.
 *
 * SLiib is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SLiib is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with SLiib. If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
 *
 * PHP version 5
 *
 * @category   SLiib
 * @package    SLiib
 * @subpackage UnitTests
 * @author     Sliim <sliim@mailoo.org>
 * @license    GNU/GPL http://www.gnu.org/licenses/gpl-3.0.html
 * @version    Release: 0.2
 * @link       http://www.sliim-projects.eu
 */
require_once 'PHPUnit/Framework.php';
require_once 'SLiib/Application.php';

define('ROOT_PATH', realpath(dirname(__FILE__) . '/../../others/Application/'));
define('APP_PATH', realpath(ROOT_PATH . '/application/'));
define('APP_NS', 'Test');

/**
 * Test class for SLiib_Application.
 * Generated by PHPUnit on 2011-10-30 at 16:29:08.
 */
class SLiib_ApplicationTest extends PHPUnit_Framework_TestCase
{

    const ENABLE_OUTPUT_CLEANER = true;


    /**
     * Test run application
     *
     * @return void
     */
    public function testRunApp()
    {
        $this->_runApp();

    }


    /**
     * Test /test/noview
     *
     * @return void
     */
    public function testRunTestNoview()
    {
        $this->_setServerInfo('REQUEST_URI', '/test/noview');
        $this->_runApp();

    }


    /**
     * Test with params (GET)
     *
     * @return void
     */
    public function testRunTestParams()
    {
        $this->_setServerInfo('REQUEST_URI', '/test/request/foo/bar/1337/w00t');
        $this->_setServerInfo('REQUEST_METHOD', 'GET');
        $this->_runApp();

        $params = SLiib_HTTP_Request::getParameters();
        $this->assertType('array', $params);
        $this->assertArrayHasKey('foo', $params);
        $this->assertEquals('bar', $params['foo']);
        $this->assertArrayHasKey('1337', $params);
        $this->assertEquals('w00t', $params['1337']);

        $method = SLiib_HTTP_Request::getRequestMethod();
        $this->assertEquals('GET', $method);

    }


    /**
     * Run application
     *
     * @return void
     */
    private function _runApp()
    {
        if (self::ENABLE_OUTPUT_CLEANER) {
            ob_start();
        }

        SLiib_Application::init(
            APP_NS,
            APP_PATH
        )->run();

        if (self::ENABLE_OUTPUT_CLEANER) {
            ob_clean();
            ob_flush();
        }

    }


    /**
     * Set index of $_SERVER for tests
     *
     * @param string $index Index of $_SERVER
     * @param string $value Value to assign
     *
     * @return void
     */
    private function _setServerInfo($index, $value)
    {
        global $_SERVER;
        $_SERVER[$index] = $value;

    }


}